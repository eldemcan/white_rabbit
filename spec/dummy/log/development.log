Cleaning services
Cleaning existing tasks
  [1m[36mWhiteRabbit::TaskModel Destroy (0.2ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
Cleaning existing tasks
white_rabbit_task_models is not exists yet
DEPRECATION WARNING: Leaving `ActiveRecord::ConnectionAdapters::SQLite3Adapter.represent_boolean_as_integer`
set to false is deprecated. SQLite databases have used 't' and 'f' to serialize
boolean values and must have old data converted to 1 and 0 (its native boolean
serialization) before setting this flag to true. Conversion can be accomplished
by setting up a rake task which runs

  ExampleModel.where("boolean_column = 't'").update_all(boolean_column: 1)
  ExampleModel.where("boolean_column = 'f'").update_all(boolean_column: 0)

for all models and all boolean columns, after which the flag must be set to
true by adding the following to your application.rb file:

  Rails.application.config.active_record.sqlite3.represent_boolean_as_integer = true
 (called from <top (required)> at /Users/celdem/Desktop/recovery/plantmonitor/plantmonitorweb/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
white_rabbit_task_models is not exists yet
DEPRECATION WARNING: Leaving `ActiveRecord::ConnectionAdapters::SQLite3Adapter.represent_boolean_as_integer`
set to false is deprecated. SQLite databases have used 't' and 'f' to serialize
boolean values and must have old data converted to 1 and 0 (its native boolean
serialization) before setting this flag to true. Conversion can be accomplished
by setting up a rake task which runs

  ExampleModel.where("boolean_column = 't'").update_all(boolean_column: 1)
  ExampleModel.where("boolean_column = 'f'").update_all(boolean_column: 0)

for all models and all boolean columns, after which the flag must be set to
true by adding the following to your application.rb file:

  Rails.application.config.active_record.sqlite3.represent_boolean_as_integer = true
 (called from <top (required)> at /Users/celdem/Desktop/recovery/plantmonitor/plantmonitorweb/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
white_rabbit_task_models is not exists yet
DEPRECATION WARNING: Leaving `ActiveRecord::ConnectionAdapters::SQLite3Adapter.represent_boolean_as_integer`
set to false is deprecated. SQLite databases have used 't' and 'f' to serialize
boolean values and must have old data converted to 1 and 0 (its native boolean
serialization) before setting this flag to true. Conversion can be accomplished
by setting up a rake task which runs

  ExampleModel.where("boolean_column = 't'").update_all(boolean_column: 1)
  ExampleModel.where("boolean_column = 'f'").update_all(boolean_column: 0)

for all models and all boolean columns, after which the flag must be set to
true by adding the following to your application.rb file:

  Rails.application.config.active_record.sqlite3.represent_boolean_as_integer = true
 (called from <top (required)> at /Users/celdem/Desktop/playground_white_rabbit/sample_app/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to WhiteRabbitTasks (20181123105600)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.4ms)[0m  [1m[35mCREATE TABLE "white_rabbit_task_models" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "job_class" varchar, "job_id" varchar, "interval" varchar, "params" varchar)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181123105600"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-03-29 11:01:03.591528"], ["updated_at", "2019-03-29 11:01:03.591528"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Cleaning existing tasks
  [1m[35m (1.4ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.5ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
  [1m[35m (1.5ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.1ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
  [1m[35m (1.4ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.5ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
  [1m[35m (1.5ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (0.9ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
  [1m[35m (2.0ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.0ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
  [1m[35m (2.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.1ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
  [1m[35m (2.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.0ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
  [1m[35m (1.4ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.0ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
Cleaning existing tasks
  [1m[35m (1.8ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.0ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
DEPRECATION WARNING: Using `bin/rake routes` is deprecated and will be removed in Rails 6.1. Use `bin/rails routes` instead.
 (called from load at /Users/celdem/.asdf/installs/ruby/2.6.6/bin/rake:23)
Cleaning existing tasks
  [1m[35m (2.0ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (0.8ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
DEPRECATION WARNING: Using `bin/rake routes` is deprecated and will be removed in Rails 6.1. Use `bin/rails routes` instead.
 (called from load at /Users/celdem/.asdf/installs/ruby/2.7.2/bin/rake:23)
Cleaning existing tasks
  [1m[35m (2.0ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (2.6ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "schema_sha1"]]
Cleaning existing tasks
  [1m[35m (1.5ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.3ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "white_rabbit_task_models"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "white_rabbit_task_models" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "job_class" varchar, "job_id" varchar, "interval" varchar, "params" varchar)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181123105600)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2021-01-29 12:28:55.228392"], ["updated_at", "2021-01-29 12:28:55.228392"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2021-01-29 12:28:55.232040"], ["key", "environment"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "schema_sha1"], ["value", "c526336fb77d606e1daf4e6f9e71ead03ee712a1"], ["created_at", "2021-01-29 12:28:55.235147"], ["updated_at", "2021-01-29 12:28:55.235147"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Processing by WhiteRabbit::AdminController#index as HTML
  Rendering /Users/celdem/rails_st/white_rabbit/app/views/white_rabbit/admin/index.html.erb within layouts/white_rabbit/application
  Template rendering was prevented by rspec-rails. Use `render_views` to verify rendered view contents if necessary.
  Rendered /Users/celdem/rails_st/white_rabbit/app/views/white_rabbit/admin/index.html.erb within layouts/white_rabbit/application (Duration: 1.5ms | Allocations: 217)
  Template rendering was prevented by rspec-rails. Use `render_views` to verify rendered view contents if necessary.
Completed 200 OK in 13ms (Views: 12.1ms | ActiveRecord: 0.0ms | Allocations: 2447)


DEPRECATION WARNING: Rails 6.1 will return Content-Type header without modification. If you want just the MIME type, please use `#media_type` instead. (called from block (3 levels) in <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/controllers/white_rabbit/admin_controller_spec.rb:13)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Processing by WhiteRabbit::AdminController#create as HTML
  Parameters: {"frequency"=>"1", "frequencyType"=>"min", "jobParams"=>"", "jobTypes"=>"MyDummyTask"}
Redirected to http://test.host/white_rabbit/index
Completed 302 Found in 1ms (ActiveRecord: 0.0ms | Allocations: 338)


  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Processing by WhiteRabbit::AdminController#destroy_job as HTML
  Parameters: {"jobId"=>"100"}
  [1m[36mWhiteRabbit::TaskModel Load (0.2ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" WHERE "white_rabbit_task_models"."job_id" = ? LIMIT ?[0m  [["job_id", "100"], ["LIMIT", 1]]
Redirected to http://test.host/white_rabbit/index
Completed 302 Found in 3ms (ActiveRecord: 0.2ms | Allocations: 529)


  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.4ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "100"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" ORDER BY "white_rabbit_task_models"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" ORDER BY "white_rabbit_task_models"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" ORDER BY "white_rabbit_task_models"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" WHERE "white_rabbit_task_models"."job_id" = ? LIMIT ?[0m  [["job_id", "1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (0.3ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
Cleaning existing tasks
  [1m[35m (1.9ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.0ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "schema_sha1"]]
Cleaning existing tasks
  [1m[35m (1.6ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.3ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "white_rabbit_task_models"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "white_rabbit_task_models" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "job_class" varchar, "job_id" varchar, "interval" varchar, "params" varchar)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181123105600)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2021-01-29 15:09:52.941233"], ["updated_at", "2021-01-29 15:09:52.941233"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2021-01-29 15:09:52.945356"], ["key", "environment"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "schema_sha1"], ["value", "c526336fb77d606e1daf4e6f9e71ead03ee712a1"], ["created_at", "2021-01-29 15:09:52.948815"], ["updated_at", "2021-01-29 15:09:52.948815"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Processing by WhiteRabbit::AdminController#index as HTML
  Rendering /Users/celdem/rails_st/white_rabbit/app/views/white_rabbit/admin/index.html.erb within layouts/white_rabbit/application
  Template rendering was prevented by rspec-rails. Use `render_views` to verify rendered view contents if necessary.
  Rendered /Users/celdem/rails_st/white_rabbit/app/views/white_rabbit/admin/index.html.erb within layouts/white_rabbit/application (Duration: 1.3ms | Allocations: 217)
  Template rendering was prevented by rspec-rails. Use `render_views` to verify rendered view contents if necessary.
Completed 200 OK in 12ms (Views: 11.2ms | ActiveRecord: 0.0ms | Allocations: 2447)


DEPRECATION WARNING: Rails 6.1 will return Content-Type header without modification. If you want just the MIME type, please use `#media_type` instead. (called from block (3 levels) in <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/controllers/white_rabbit/admin_controller_spec.rb:13)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Processing by WhiteRabbit::AdminController#create as HTML
  Parameters: {"frequency"=>"1", "frequencyType"=>"min", "jobParams"=>"", "jobTypes"=>"MyDummyTask"}
[31mUnpermitted parameter: :frequencyType[0m
Completed 500 Internal Server Error in 254984712ms (ActiveRecord: 0.0ms | Allocations: 62544)


Cleaning existing tasks
  [1m[35m (1.9ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.2ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "schema_sha1"]]
Cleaning existing tasks
  [1m[35m (1.6ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.5ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "white_rabbit_task_models"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "white_rabbit_task_models" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "job_class" varchar, "job_id" varchar, "interval" varchar, "params" varchar)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181123105600)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2021-02-06 19:54:38.879891"], ["updated_at", "2021-02-06 19:54:38.879891"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2021-02-06 19:54:38.897274"], ["key", "environment"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "schema_sha1"], ["value", "c526336fb77d606e1daf4e6f9e71ead03ee712a1"], ["created_at", "2021-02-06 19:54:38.900625"], ["updated_at", "2021-02-06 19:54:38.900625"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Cleaning existing tasks
  [1m[35m (1.7ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (2.1ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "schema_sha1"]]
Cleaning existing tasks
  [1m[35m (1.5ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.1ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "white_rabbit_task_models"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "white_rabbit_task_models" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "job_class" varchar, "job_id" varchar, "interval" varchar, "params" varchar)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181123105600)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2021-02-06 20:09:49.321659"], ["updated_at", "2021-02-06 20:09:49.321659"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2021-02-06 20:09:49.325337"], ["key", "environment"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "schema_sha1"], ["value", "c526336fb77d606e1daf4e6f9e71ead03ee712a1"], ["created_at", "2021-02-06 20:09:49.328566"], ["updated_at", "2021-02-06 20:09:49.328566"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
Cleaning existing tasks
  [1m[35m (1.9ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.2ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "schema_sha1"]]
Cleaning existing tasks
  [1m[35m (1.5ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.3ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "white_rabbit_task_models"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "white_rabbit_task_models" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "job_class" varchar, "job_id" varchar, "interval" varchar, "params" varchar)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181123105600)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2021-02-06 20:16:57.990704"], ["updated_at", "2021-02-06 20:16:57.990704"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2021-02-06 20:16:57.994398"], ["key", "environment"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "schema_sha1"], ["value", "c526336fb77d606e1daf4e6f9e71ead03ee712a1"], ["created_at", "2021-02-06 20:16:57.997738"], ["updated_at", "2021-02-06 20:16:57.997738"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.4ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "1"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" ORDER BY "white_rabbit_task_models"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.3ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "1"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" WHERE "white_rabbit_task_models"."job_id" = ? LIMIT ?[0m  [["job_id", "1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (0.1ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models" WHERE "white_rabbit_task_models"."id" = ?[0m  [["id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.3ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "1"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (0.1ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Cleaning existing tasks
  [1m[35m (1.7ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.0ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "schema_sha1"]]
Cleaning existing tasks
  [1m[35m (1.4ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.6ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "white_rabbit_task_models"[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "white_rabbit_task_models" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "job_class" varchar, "job_id" varchar, "interval" varchar, "params" varchar)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181123105600)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2021-02-06 20:20:03.838918"], ["updated_at", "2021-02-06 20:20:03.838918"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2021-02-06 20:20:03.843064"], ["key", "environment"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "schema_sha1"], ["value", "c526336fb77d606e1daf4e6f9e71ead03ee712a1"], ["created_at", "2021-02-06 20:20:03.846407"], ["updated_at", "2021-02-06 20:20:03.846407"]]
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.4ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "1"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" ORDER BY "white_rabbit_task_models"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.3ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "1"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" WHERE "white_rabbit_task_models"."job_id" = ? LIMIT ?[0m  [["job_id", "1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (0.1ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models" WHERE "white_rabbit_task_models"."id" = ?[0m  [["id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.3ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "1"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (0.1ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Cleaning existing tasks
  [1m[35m (2.4ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.4ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "schema_sha1"]]
Cleaning existing tasks
  [1m[35m (1.6ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (1.6ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
DEPRECATION WARNING: Initialization autoloaded the constants WhiteRabbit::ApplicationRecord, WhiteRabbit::TaskModel, and WhiteRabbit::SchedulerService.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload WhiteRabbit::ApplicationRecord, for example,
the expected changes won't be reflected in that stale Class object.

`config.autoloader` is set to `classic`. These autoloaded constants would have been unloaded if `config.autoloader` had been set to `:zeitwerk`.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/celdem/rails_st/white_rabbit/spec/dummy/config/environment.rb:5)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "white_rabbit_task_models"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "white_rabbit_task_models" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "job_class" varchar, "job_id" varchar, "interval" varchar, "params" varchar)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181123105600)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2021-02-06 20:21:14.831885"], ["updated_at", "2021-02-06 20:21:14.831885"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2021-02-06 20:21:14.835570"], ["key", "environment"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "schema_sha1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "schema_sha1"], ["value", "c526336fb77d606e1daf4e6f9e71ead03ee712a1"], ["created_at", "2021-02-06 20:21:14.838920"], ["updated_at", "2021-02-06 20:21:14.838920"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.4ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "1"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" ORDER BY "white_rabbit_task_models"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.1ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" ORDER BY "white_rabbit_task_models"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.3ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "1"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Load (0.2ms)[0m  [1m[34mSELECT "white_rabbit_task_models".* FROM "white_rabbit_task_models" WHERE "white_rabbit_task_models"."job_id" = ? LIMIT ?[0m  [["job_id", "1"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (0.2ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models" WHERE "white_rabbit_task_models"."id" = ?[0m  [["id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Create (0.3ms)[0m  [1m[32mINSERT INTO "white_rabbit_task_models" ("job_class", "job_id", "interval", "params") VALUES (?, ?, ?, ?)[0m  [["job_class", "WhiteRabbit::MyDummyTask"], ["job_id", "1"], ["interval", "*/1 * * * *"], ["params", ""]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mWhiteRabbit::TaskModel Destroy (0.1ms)[0m  [1m[31mDELETE FROM "white_rabbit_task_models"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "white_rabbit_task_models"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
